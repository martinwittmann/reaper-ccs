/**
 * Do not edit this file.
 * To get started with creating a reaper extension please see entrypoint.cpp.
 */

#define REAPERAPI_IMPLEMENT
#include <iostream>
#include <string>
#include "../reaper/reaper_plugin.h"
#include "../reaper/reaper_plugin_functions.h"

#define LOCALIZE_IMPORT_PREFIX "csurf_"
#include "../reaper/localize-import.h"
#include "../reaper/csurf.h"
#include "../WDL/setthreadname.h"

#ifndef _WIN32
#include "../WDL/swell/swell-dlggen.h"
#include "../reaper/res.rc_mac_dlg"
#include "../WDL/swell/swell-menugen.h"
#include "../reaper/res.rc_mac_menu"
#endif

// This file is supposed to contain a function reaper_extension_entrypoint()
// which we call from here to set up the extension.
// We do this in order to abstract away the more complicated and not so clean
// aspects of creating reaper extensions.
#include "../entrypoint.cpp"



extern reaper_csurf_reg_t csurf_novation_slmk3_reg;

/*
void (*VkbStuffMessage)(MIDI_event_t *evt, bool wantCurChan);
MediaTrack* (*GetLastTouchedTrack)();
const char* (*GetOscCfgDir)();
bool (*WDL_ChooseDirectory)(HWND parent, const char *text, const char *initialdir, char *fn, int fnsize, bool preservecwd);
char* (*WDL_ChooseFileForOpen)(HWND, const char*, const char*, const char*, const char*, const char*, bool, bool, const char*, void*,
                               int (*Plugin_Register)(const char *name, void *infostruct);
MediaTrack *(*GetTrack)(ReaProject *proj, int tridx);

#ifdef _WIN32
  HINSTANCE hInstance
#else
 struct SWELL_DialogResourceIndex*
#endif
);
*/

HWND g_hwnd;

extern "C" {
  REAPER_PLUGIN_DLL_EXPORT int REAPER_PLUGIN_ENTRYPOINT(
    REAPER_PLUGIN_HINSTANCE hInstance,
    reaper_plugin_info_t* rec
  ) {
    // This should be reaper's main window.
    g_hwnd = rec->hwnd_main;

    if (rec != nullptr) {
      return load_reaper_extension(rec);
    }
    else {
      return unload_reaper_extension(rec);
    }
  }
}


